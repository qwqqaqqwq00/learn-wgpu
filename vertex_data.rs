pub fn cube_positions() -> Vec<[i8; 3]> {
    [
        // front (0, 0, 1)
        [-1, -1,  1], [1, -1,  1], [-1,  1,  1], [ 1,  1,  1],

        // right (1, 0, 0)
        [1, -1, -1], [ 1,  1, -1],

        // back (0, 0, -1)
        [-1, -1, -1], [-1,  1, -1],

        // left (-1, 0, 0)
        // [-1,  1,  1],

        // top (0, 1, 0)

        // bottom (0, -1, 0)
    ].to_vec()
}

pub fn cube_indices() -> Vec<u16> {
    [
        // front
        0, 1, 2, 2, 1, 3,
        // right
        1, 4, 3, 3, 4, 5,
        // back
        4, 6, 5, 5, 6, 7,
        // left
        6, 0, 7, 7, 0, 2,
        // top
        2, 3, 7, 7, 3, 5,
        // bottom
        6, 4, 0, 0, 4, 1,
    ].to_vec()
}

pub fn cube_normals() -> Vec<[i8; 3]> {
    [
        // front 
        [0, 0, 1], [0, 0, 1], [0, 0, 1], [0, 0, 1],

        // right 
        [1, 0, 0], [1, 0, 0],

        // back           
        [0, 0, -1], [0, 0, -1],

        // left 
        // [-1, 0, 0],

        // top 
        // [0, 1, 0], [0, 1, 0], [0, 1, 0], [0, 1, 0], [0, 1, 0], [0, 1, 0],

        // // bottom
        // [0, -1, 0], [0, -1, 0], [0, -1, 0], [0, -1, 0], [0, -1, 0], [0, -1, 0],
    ].to_vec()
}

// pub fn cube_colors() -> Vec<[i8; 3]> {
//     [
//         // front - blue
//         [0, 0, 1], [0, 0, 1], [0, 0, 1], [0, 0, 1], [0, 0, 1], [0, 0, 1],

//         // right - red
//         [1, 0, 0], [1, 0, 0], [1, 0, 0], [1, 0, 0], [1, 0, 0], [1, 0, 0],

//         // back - yellow           
//         [1, 1, 0], [1, 1, 0], [1, 1, 0], [1, 1, 0], [1, 1, 0], [1, 1, 0],

//         // left - aqua
//         [0, 1, 1], [0, 1, 1], [0, 1, 1], [0, 1, 1], [0, 1, 1], [0, 1, 1],

//         // top - green
//         [0, 1, 0], [0, 1, 0], [0, 1, 0], [0, 1, 0], [0, 1, 0], [0, 1, 0],

//         // bottom - fuchsia
//         [1, 0, 1], [1, 0, 1], [1, 0, 1], [1, 0, 1], [1, 0, 1], [1, 0, 1],
//     ].to_vec()
// }

pub fn cube_coord() -> Vec<[i8; 2]> {
    [
        // front
        [0, 0], [0, 1], [1, 0], [1, 1],
        //right
        [0, 1], [1, 1],
        //back
        [0, 1], [1, 1],
        //left
        // [0, 0], [0, 1], [1, 0], [1, 0], [0, 1], [1, 1],
        // //top
        // [0, 0], [0, 1], [1, 0], [1, 0], [0, 1], [1, 1],
        // //bottom
        // [0, 0], [0, 1], [1, 0], [1, 0], [0, 1], [1, 1],
    ].to_vec()
}